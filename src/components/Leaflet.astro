---
export interface Props {
  latitude: number;
  longitude: number;
  zoom: number;
  /** the DOM ID of a <div> element */
  container: string;
  /** https://leafletjs.com/reference.html#tilelayer */
  tileLayer: string;
  /** Most tile servers require attribution. */
  attribution: string;
  containerstyle?: string;
}

const {
  latitude,
  longitude,
  zoom,
  container,
  tileLayer,
  attribution,
  containerstyle = "height: 61.8vh",
} = Astro.props;
---


<leaflet-map
  data-latitude={latitude}
  data-longitude={longitude}
  data-zoom={zoom}
  data-container={container}
  data-tiles={tileLayer}
  data-attribution={attribution}
  data-containerstyle={containerstyle}

>
  <div id={container} style={containerstyle}></div>
</leaflet-map>

  <script>


///complicated version
    // import "leaflet/dist/leaflet";
    import * as L from 'leaflet';
    import "leaflet/dist/leaflet.css";
    import houseIcon from '../../public/house.png';

    class LeafletMap extends HTMLElement {
      latlng: [number, number]; 
      
      constructor() {
        super();

        this.latlng = [
          Number(this.dataset.latitude),
          Number(this.dataset.longitude),
        ];
        
      }

      connectedCallback() {
    // Vérification de l'existence de window pour éviter les erreurs côté serveur
    if (typeof window !== 'undefined') {
      this.initMap();
    }
  }

  initMap() {
    const map = L.map(this.dataset.container).setView(
      this.latlng,
      Number(this.dataset.zoom),
    );

    L.tileLayer(this.dataset.tiles, {
      attribution: this.dataset.attribution,
    }).addTo(map);

    const HomeIcon = L.icon({
      iconUrl: houseIcon.src, // Utilisation de l'import d'image
      iconSize: [30, 30],
      iconAnchor: [10, 10],
      popupAnchor: [-3, -76],
    });

    const marker = new L.Marker([48.814826, -0.365081], { icon: HomeIcon });
    marker.addTo(map);
  }
}

// Définir l'élément personnalisé
window.customElements.define("leaflet-map", LeafletMap);


// version https://github.com/roblabs/maps-withastro/blob/main/src/Leaflet.astro




//old version
    // if (typeof window !== 'undefined') {
    //     var map = L.map(this.dataset.container).setView(
    //       latlng,
    //       Number(this.dataset.zoom),
    //     );
    //     // console.log("house", house);
    //     L.tileLayer(this.dataset.tiles, {
    //       attribution: this.dataset.attribution,
    //     }).addTo(map);

    //     var HomeIcon = L.icon({
    //       iconUrl: "../../public/house.png",

    //       iconSize: [30, 30], // size of the icon
    //       iconAnchor: [10, 10], // point of the icon which will correspond to marker's location
    //       popupAnchor: [-3, -76], // point from which the popup should open relative to the iconAnchor
    //     });


    //     // var house = new HomeIcon({ iconUrl: { House } });

    //     var marker = new L.Marker([48.814826, -0.365081], {icon: HomeIcon});
    //     marker.addTo(map);
    //   }
  
  
    // window.customElements.define("leaflet-map", LeafletMap);




    // class LeafletMap extends HTMLElement {
    //   constructor() {
    //     super();

    //     const latlng = [
    //       Number(this.dataset.latitude),
    //       Number(this.dataset.longitude),
    //     ];

        

    //     onMount(() => {
    //       if (typeof window !== 'undefined') {
    //     var map = L.map(this.dataset.container).setView(
    //       latlng,
    //       Number(this.dataset.zoom),
    //     );
    //     // console.log("house", house);
    //     L.tileLayer(this.dataset.tiles, {
    //       attribution: this.dataset.attribution,
    //     }).addTo(map);

    //     var HomeIcon = L.icon({
    //       iconUrl: "../../public/house.png",

    //       iconSize: [30, 30], // size of the icon
    //       iconAnchor: [10, 10], // point of the icon which will correspond to marker's location
    //       popupAnchor: [-3, -76], // point from which the popup should open relative to the iconAnchor
    //     });


    //     // var house = new HomeIcon({ iconUrl: { House } });

    //     var marker = new L.Marker([48.814826, -0.365081], {icon: HomeIcon});
    //     marker.addTo(map);
    //   }
    // });
  
    // window.customElements.define("leaflet-map", LeafletMap);


</script>
</section>