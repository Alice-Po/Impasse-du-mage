---
export interface Props {
  latitude: number;
  longitude: number;
  zoom: number;
  /** the DOM ID of a <div> element */
  container: string;
  /** https://leafletjs.com/reference.html#tilelayer */
  tileLayer: string;
  /** Most tile servers require attribution. */
  attribution: string;
  containerstyle?: string;
}

const {
  latitude,
  longitude,
  zoom,
  container,
  tileLayer,
  attribution,
  containerstyle = "height: 61.8vh",
} = Astro.props;

import "leaflet/dist/leaflet.css";

---

<leaflet-map
  data-latitude={latitude}
  data-longitude={longitude}
  data-zoom={zoom}
  data-container={container}
  data-tiles={tileLayer}
  data-attribution={attribution}
  data-containerstyle={containerstyle}

>
  <div id={container} style={containerstyle}></div>
</leaflet-map>

  <script type="module" >

    import * as L from "https://cdn.jsdelivr.net/npm/leaflet@1.8.0/dist/leaflet-src.esm.js";
    class LeafletMap extends HTMLElement {

      constructor() {
        super();

        this.latlng = [
          Number(this.dataset.latitude),
          Number(this.dataset.longitude),
        ];
        
        if (typeof window !== 'undefined') {
    const map = L.map(this.dataset.container).setView([48.814826, -0.365081], 13);

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; OpenStreetMap contributors'
    }).addTo(map);

    const HomeIcon = L.icon({
      iconUrl: "_house.png",
      iconSize: [30, 30],
      iconAnchor: [10, 10],
      popupAnchor: [-3, -76],
    });

    const marker = new L.Marker([48.814826, -0.365081], { icon: HomeIcon });
    marker.addTo(map);
  }
      } 
}

// Définir l'élément personnalisé
window.customElements.define("leaflet-map", LeafletMap);

</script>
</section>